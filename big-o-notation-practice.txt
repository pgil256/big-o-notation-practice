Part 1
O(n + 10) = O(n)
O(100 * n) = O(n)
O(25) = 0(1)
O(n^2 + n^3) = O(n^3)
O(n + n + n + n) = O(n)
O(1000 * log(n) + n) = O(n)
O(1000 * n * log(n) + n) = O(nlogn)
O(2^n + n^2) O(2^n)
O(5 + 3 + 1) O(1)
O(n + n^(1/2) + n^2 + n * log(n)^10) = O(n^2)

Part 3
True or false: n^2 + n is O(n^2). True
True or false: n^2 * n is O(n^3). True
True or false: n^2 + n is O(n). false
What’s the time complexity of the .indexOf array method? N
What’s the time complexity of the .includes array method? N
What’s the time complexity of the .forEach array method? N^2
What’s the time complexity of the .sort array method? Nlogn
What’s the time complexity of the .unshift array method? N
What’s the time complexity of the .push array method? 1
What’s the time complexity of the .splice array method? 1
What’s the time complexity of the .pop array method? 1
What’s the time complexity of the Object.keys() function? N
BONUS

What’s the space complexity of the Object.keys() function?N